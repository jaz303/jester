foo = 0
foo = 100
bar = "green"

if foo < 10 {
	print("foo is less than 10")
} else if foo == 10 {
	print("foo is 10") 
} else if bar == "green" {
	print("bar is green")
}

print("1 | 2 =", 1 | 2)
print("5 ^ 5 =", 5 ^ 5)
print("3 & 1 =", 3 & 1)
print("4 == 4", 4 == 4)
print("3 != 4", 3 != 4)
print("1 < 2", 1 < 2)
print("2 <= 2", 2 <= 2)
print("3 > 2", 3 > 2)
print("2 >= 2", 2 >= 2)
print("6 >> 1 =", 6 >> 1)
print("6 << 2 =", 6 << 2)
print("10 + 5 =", 10 + 5)
print("11 - 6 =", 11 - 6)
print("5 * 10 =", 5 * 10)
print("5 / 10 =", 5 / 10)
print("21 \\ 10 =", 21 \ 10)
print("10 ** 2 =", 10 ** 2)
print("21 % 10 =", 21 % 10)
print("a() && b() && c() =", a() && b())
print("a() || c() =", a() || b())

$foo = 10
print("$foo =", $foo)

print("foo =", foo)
c()
c()
print("foo =", foo)

def a() {
	return true
}

def b() {
	return 0
}

def c() {
	foo = foo + 1
}

--a = b = 0xff
--b = b + 0b1100101
--
--print(a + b)
--print(1 + 2)
--print(10 + 4 - 4)
--
---- x = 0
---- while x < 10 {
---- 	print(x)
---- 	sleep(0.05)
---- 	x = x + 1
---- }
--
--def test_closure(x) {
--	y = 15
--	def foo {
--		print(x + y + a + b)
--	}
--	return foo
--}
--
--my_fn = test_closure(100)
--my_fn()
--
--
--def count_to(x, d) {
--	i = 0
--	while i < x {
--		print(i); sleep(d)
--		i = i + 1
--	}
--}
--
--t1 = spawn count_to(10, 0.1)
--t2 = spawn count_to(100, 0.01)
--t3 = spawn count_to(5, 0.2)
--
--wait(t1)
--wait(t2)
--wait(t3)
--
--print(303)--