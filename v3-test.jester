import foo
import foo as f
import foo.{ alpha, beta, gamma }
import foo.{ alpha as a, beta as b, gamma as c }
import foo.{ alpha as a, beta as b, gamma as c } as f
import! foo
import! foo.{ alpha, beta }
import! foo.{ alpha as a, beta as b }
export foo
export foo as f
export foo, bar
export foo as f, bar as b
export! foo

def foo? {
	
}

def destroy! {
	
}

spawn foo 10, 20

spawn foo[0].bar 100, 200

task := spawn foo(1, 2, 3)

bleem := spawn my_task a, b, c

.[ a,b | return 10 ]

def baz(a ,  b   , c = 10) {
	
}

def bar() {
	return 10; loop { true }	
}

a := 10
a := 1 + 2
a[10] := fooobar

z := foo 1, 2, 3, .[ a,b| bar 10, 20 ], 50, 60

foo(1, 2, 3)

foo 1, 2, 3

z := foo 1, 2, 3

b := foo 1, (foo 2, 3), 3

b := 5 ** 10

b := !b

c := (1 + 2 + (3 / foo(1,2,3)))

test := foo(1, 2, ?)

results = sort(.[l,r| l-r], [5, 6, 10, 1, 2])

def foo(l,r) {
	l - r
}

comparator = &foo


a[10] := b[5] + 10

while 1 {

	;;;;;;

	;;;

	{ a: 1 }


	foo()

	loop {

	}

	;;


	loop while true { a; b; c; 123


	}

	;;

	if false {
		1; 2; 3
	} else if 10 {

	} else if 9 {

	} else {
		boom; bang; bling
	}

	for a, b in $foo {

	}

	for a in 1 to 10 {

	}

	for b in 3 to 30 step 3 {

	}
}